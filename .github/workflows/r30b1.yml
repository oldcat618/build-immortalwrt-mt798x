name: r30b1

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
        
env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  TZ: Asia/Shanghai
  DEVICE: r30b1
  UPLOAD_OUTPUT: true

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        # 清理和更新
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt-get update -y
        
        # 安装基础工具
        sudo apt-get install -y \
          build-essential \
          ccache \
          clang \
          cmake \
          curl \
          file \
          flex \
          gawk \
          gettext \
          git \
          gperf \
          help2man \
          libncurses-dev \
          libssl-dev \
          make \
          meson \
          ninja-build \
          p7zip-full \
          python3 \
          python3-pip \
          python3-setuptools \
          rsync \
          subversion \
          swig \
          tar \
          unzip \
          wget \
          xxd \
          zlib1g-dev
        
        # 处理特殊依赖
        # Python 2.7 替代方案
        sudo apt-get install -y python-is-python2 || true
        sudo ln -sf /usr/bin/python2 /usr/bin/python2.7 || true
        
        # 其他替代包
        sudo apt-get install -y \
          genisoimage \
          libgmp-dev \
          libmpc-dev \
          libmpfr-dev \
          libreadline-dev \
          qemu-utils
        
        # 清理
        sudo apt-get autoremove -y
        sudo apt-get clean
        
        # 设置时区（可选）
        sudo timedatectl set-timezone "$TZ"
        
        # 创建工作目录
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 克隆源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt


    - name: 配置 Feeds
      run: |
        cp -f $GITHUB_WORKSPACE/.config $GITHUB_WORKSPACE/openwrt/
        cd openwrt
        echo "src-git kenzo https://github.com/kenzok8/openwrt-packages" >> ./feeds.conf.default
        echo "src-git small https://github.com/kenzok8/small" >> ./feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        cp -f $GITHUB_WORKSPACE/.config $GITHUB_WORKSPACE/openwrt/
        ./scripts/feeds install -a

    - name: 修改 Lan IP
      run: |
        cd openwrt
        sed -i 's/192.168.1.1/192.168.10.1/g' package/base-files/files/bin/config_generate
        neofetch

    - name: 下载依赖
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      run: |
        cd openwrt
        make -j$(nproc)
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name : 上传输出文件
      uses: actions/upload-artifact@master
      if: env.UPLOAD_OUTPUT == 'true' && !cancelled()
      with:
        name: ${{ env.DEVICE }}--${{ env.FILE_DATE }}
        path: openwrt/bin
        
    - name: 整理输出文件
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
    
    - name: 发布固件至 Release
      uses: ncipollo/release-action@v1
      with:
        tag: "${{ env.DEVICE }}--${{ env.FILE_DATE }}"
        artifacts: "openwrt/bin/targets/*/*/*"
        body: |
          # 未测试×
          
          IP: 192.168.10.1 | Password: none
